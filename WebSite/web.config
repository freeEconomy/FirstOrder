<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  참고: 이 파일을 직접 편집하는 대신 웹 관리 도구를 사용하면 
  사용 중인 응용 프로그램에 대한 설정을 구성할 수 있습니다.
  Visual Studio에서 [웹 사이트]의 [Asp.Net 구성] 옵션을 사용하십시오.
  설정 및 주석에 대한 전체 목록은 일반적으로 
  \Windows\Microsoft.Net\Framework\v2.x\Config의 
  machine.config.comments에 있습니다. 
-->
<configuration>
  <appSettings>
    <add key="webPages:Version" value="2.0" />
    <add key="webpages:Enabled" value="true" />
    <add key="aspnet:MaxHttpCollectionKeys" value="40000" />
    <add key="assemblyInfo" value="MCi50aw5qnv0ITR32fLPfSTsMcE7vSWEGaHxypV+dRrmtBEjedjyqw==" />
    <add key="mainDB" value="Server=db.markorder.co.kr;Database=dbmarkorder;uid=markorder;pwd=markorder2019++;Max Pool Size=500;" />
    <add key="tbucDB" value="Server=db.tbuctoss2013.gabia.io;Database=dbtbuctoss2013;uid=tbuctoss2013;pwd=tbuctoss2013++;Max Pool Size=500;" />
    <add key="RootDir" value="D:\개인폴더\AlbaWork\source\FirstOrder\WebSite"/>
    <add key="LogFilePath" value="Log"/>
    <add key="BoardFilePath" value="Board"/>
    <add key="UploadFilePath" value="Upload"/>
    <add key="AsFilePath" value="Upload/AS"/>
    <add key="wkhtml" value="D:\개인폴더\AlbaWork\source\FirstOrder\WebSite\Print\wkhtmltopdf.exe"/>
  </appSettings>
  <connectionStrings />
  <system.web.extensions>
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="509600000" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <system.web>
    <webServices>
      <protocols>
        <add name="HttpGet" />
        <add name="HttpPost" />
      </protocols>
    </webServices>
    <sessionState mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" timeout="180" />
    <httpModules>
      <remove name="WindowsAuthentication" />
      <remove name="PassportAuthentication" />
      <remove name="AnonymousIdentification" />
    </httpModules>
    
    <httpRuntime executionTimeout="300" maxRequestLength="1024000" useFullyQualifiedRedirectUrl="false" minFreeThreads="8" minLocalRequestFreeThreads="4" appRequestQueueLimit="100" />
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" culture="ko-KR" uiCulture="ko-KR" />
    <!-- 
      컴파일된 페이지에 디버깅 기호를 삽입하려면 
      compilation debug="true"로 설정하십시오. 이렇게
      하면 성능에 영향을 주므로 개발하는 동안에만
      이 값을 true로 설정하십시오.
    -->
    <trace enabled="false" pageOutput="false" />
    <compilation debug="true" targetFramework="4.0" optimizeCompilations="true">
      <assemblies>
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Management.Instrumentation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="Microsoft.Build.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Web.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
      <authentication> 섹션에서는 ASP.NET에서 사용되는 
      보안 인증 모드의 구성을 설정하여 들어오는 
      사용자를 식별할 수 있습니다. 
    -->
    <authentication mode="Windows" />
    <!--
      <customErrors> 섹션에서는 요청을 실행하는 동안 
      처리되지 않은 오류가 발생하는 경우 수행할 작업을 
      구성할 수 있습니다. 특히 이 섹션에서는 개발자가 
      오류 스택 추적 대신 html 오류 페이지가 표시되도록 
      구성할 수 있습니다.
    -->
    <customErrors mode="Off" />
    <pages enableViewStateMac="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" enableEventValidation="false">
      <controls>
        <add tagPrefix="CKEditor" namespace="CKEditor.NET" assembly="CKEditor.NET"/>
        <add tagPrefix="asp" namespace="System.Web.UI.DataVisualization.Charting" assembly="System.Web.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add tagPrefix="webdiyer" namespace="Wuqi.Webdiyer" assembly="AspNetPager" />
      </controls>
    </pages>
    <httpHandlers>
      <add path="ChartImg.axd" verb="GET,HEAD,POST" type="System.Web.UI.DataVisualization.Charting.ChartHttpHandler, System.Web.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" validate="false" />
    </httpHandlers>
  </system.web>
  <!-- 
    IIS(Internet Information Services) 7.0에서 ASP.NET AJAX를 실행하려면
    system.webServer 섹션이 필요합니다. 이전 버전의 IIS에서는 필요하지 않습니다.
  -->
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <validation validateIntegratedModeConfiguration="false" />
    
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Headers" value="Content-Type" />
      </customHeaders>
    </httpProtocol>
    <handlers>
      <remove name="ChartImageHandler" />
      <add name="ChartImageHandler" preCondition="integratedMode" verb="GET,HEAD,POST" path="ChartImg.axd" type="System.Web.UI.DataVisualization.Charting.ChartHttpHandler, System.Web.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </handlers>
    <defaultDocument>
      <files>
        <remove value="default.aspx" />
        <remove value="iisstart.htm" />
        <remove value="index.html" />
        <remove value="index.htm" />
        <remove value="Default.htm" />
        <remove value="default.asp" />
        <remove value="index.asp" />
        <add value="Default.aspx" />
      </files>
    </defaultDocument>
    <httpErrors errorMode="Detailed" />
  </system.webServer>

</configuration>